{"version":3,"sources":["components/TaskList.js","redux/slice/taskReducer.js","redux/store/index.js","self-hook/useIsMobileDevice.js","layouts/Header.js","components/TaskContent.js","components/AddTask.js","components/TaskItem.js","components/Footer.js","components/Content.js","components/main/MyTasks.js","components/main/InProgress.js","components/main/Completed.js","routes/RouteList.js","App.js","reportWebVitals.js","index.js"],"names":["in_progress_list","completed_list","taskSlice","createSlice","name","initialState","count","inProgress","completed","reducers","addItem","state","action","values","payload","push","delItem","path","id","splice","updateItem","key","dataKey","clickFinishTask","finishTask","finish_task","clickStar","important","taskActions","actions","configureStore","reducer","tasks","taskReducer","useIsMobileDevice","some","e","navigator","userAgent","match","Header","props","changeContentNav","content_nav","document","getElementById","style","width","clientWidth","className","to","onClick","type","children","TaskContent","useState","height","addTaskHeight","setAddTaskHeight","dispatch","useDispatch","setFinishTask","title","setTitle","setImportant","date","setDate","content","setContent","first_load","useRef","useEffect","current","resetData","dataContent","hideAddInput","dataId","clickCancel","setTimeout","setHideAddInput","add_task_span_style","display","textDecoration","backgroundColor","checked","onChange","bool","placeholder","value","target","ico","date_obj","Date","year","getFullYear","toString","month","getMonth","getDate","str","substr","padStart","paddingRight","getSmIco","rows","alert","AddTask","readOnly","TaskItem","getTaskItem","lists","getItem","data","map","arr","index","data_id","TaskList","useSelector","Footer","msg","length","Content","useLocation","pathname","title_dom","innerHTML","changeHeaderTitle","MyTasks","InProgress","Completed","GetRoute","useRoutes","element","RouteList","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8c73be90.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport TaskItem from './TaskItem';\r\n\r\nlet in_progress_list;\r\nlet completed_list;\r\n\r\n//取得 task 的每一個項目\r\nconst getTaskItem = (path) => {\r\n    let lists = [];\r\n    \r\n    switch (path) {\r\n        case '/':\r\n            lists.push(getItem(in_progress_list, path));\r\n            lists.push(getItem(completed_list, path));\r\n            break;\r\n        case '/in-progress':\r\n            lists.push(getItem(in_progress_list, path));\r\n            break;\r\n        case '/completed':\r\n            lists.push(getItem(completed_list, path));\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    \r\n    return lists;\r\n};\r\n\r\n//透過 .map 來取得項目資料\r\nconst getItem = (data, path) => {\r\n    return data.map((arr, index) => {\r\n        let data_id = arr['data_id'];\r\n\r\n        return (\r\n            <TaskItem key={ data_id } path={ path } id={ data_id } dataKey={ index } values={ arr } />\r\n        );\r\n    });\r\n};\r\n\r\nconst TaskList = (props) => {\r\n    //取得資料\r\n    in_progress_list = useSelector((state => state.tasks.inProgress));\r\n    completed_list = useSelector((state => state.tasks.completed));\r\n\r\n    return (\r\n        <>\r\n            <div className=\"task-list\">\r\n                { getTaskItem(props.path) }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TaskList;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n//宣告儲存的變數\r\nconst initialState = {\r\n    count: 0,\r\n    inProgress: [],\r\n    completed: []\r\n};\r\n\r\nconst taskSlice = createSlice({\r\n    name: 'task',\r\n    initialState,\r\n    reducers: {\r\n        addItem(state, action) {\r\n            //值\r\n            const values = action.payload.values;\r\n\r\n            //有新增資料，將 count 加一\r\n            state.count += 1;\r\n\r\n            //資料加上 dataId\r\n            values['data_id'] = state.count;\r\n\r\n            //若已完成則放在 completed，未完成放在 inProgress\r\n            if(values['finish_task']) {\r\n                state.completed.push(values);\r\n            } else {\r\n                state.inProgress.push(values);\r\n            }\r\n        },\r\n        delItem(state, action) {\r\n            //判斷是從哪一頁來的\r\n            const path = action.payload.path;\r\n            //id\r\n            const id = action.payload.id;\r\n\r\n            if(path === '/completed') {\r\n                state.completed.splice(id, 1);\r\n            } else {\r\n                state.inProgress.splice(id, 1);\r\n            }\r\n        },\r\n        updateItem(state, action) {\r\n            //判斷是從哪一頁來的\r\n            const path = action.payload.path;\r\n            //值\r\n            const values = action.payload.values;\r\n            //陣列的 key\r\n            const key = action.payload.dataKey;\r\n\r\n            if(path === '/completed') {\r\n                if(values['finish_task']) {\r\n                    //從 completed 來，所以直接更新\r\n                    state.completed[key] = values;\r\n                } else {\r\n                    //曾 completed 來，但取消完成，所以先刪除 completed 的資料，再 push 到 inProgress\r\n                    state.completed.splice(key, 1);\r\n                    state.inProgress.push = values;\r\n                }\r\n            } else {\r\n                if(values['finish_task']) {\r\n                    //從 in-progress 來，但已完成，所以先刪除 inProgress 的資料，再 push 到 completed\r\n                    state.inProgress.splice(key, 1);\r\n                    state.completed.push = values;\r\n                } else {\r\n                    //從 in-progress 來，直接更新\r\n                    state.inProgress[key] = values;\r\n                }\r\n            }\r\n        },\r\n        clickFinishTask(state, action) {\r\n            //id\r\n            const key = action.payload.dataKey;\r\n\r\n            //finish task\r\n            const finishTask = action.payload.finishTask;\r\n\r\n            //若為 true 表示完成任務，反之\r\n            if(finishTask) {\r\n                //將執行中的任務加到完成底下，並移除進行中的資料\r\n                state.inProgress[key].finish_task = finishTask;\r\n                state.completed.push(state.inProgress[key]);\r\n                state.inProgress.splice(key, 1);\r\n            } else {\r\n                //將已完成的項目加到進行中的底下，並移除完成底下的項目\r\n                state.completed[key].finish_task = finishTask;\r\n                state.inProgress.push(state.completed[key]);\r\n                state.completed.splice(key, 1);\r\n            }\r\n        },\r\n        clickStar(state, action) {\r\n            //id\r\n            const key = action.payload.dataKey;\r\n\r\n            //finish task\r\n            const finishTask = action.payload.finishTask;\r\n\r\n            //important\r\n            const important = action.payload.important;\r\n\r\n            //若有勾選完成，修改 completed 的陣列，反之\r\n            if(finishTask) {\r\n                state.completed[key].important = important;\r\n            } else {\r\n                state.inProgress[key].important = important;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n//用於可以呼叫 action 的事件\r\nexport const taskActions = taskSlice.actions;\r\n\r\n//匯出 reducer 物件\r\nexport default taskSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\n\r\n//引用 slice 裡面就包含 reducer、action\r\nimport taskReducer from '../slice/taskReducer';\r\n\r\n//這支檔案本身就是 store 了\r\nexport default configureStore({\r\n    reducer: {\r\n        tasks: taskReducer,\r\n    }\r\n});","/**\r\n * 回傳當前裝置是否屬於手機\r\n * @returns {boolean}\r\n */\r\nconst useIsMobileDevice = () => {\r\n    const mobileDevice = ['Android', 'webOS', 'iPhone', 'BlackBerry', 'Windows Phone'];\r\n    return mobileDevice.some(e => navigator.userAgent.match(e));\r\n};\r\n\r\nexport default useIsMobileDevice;","import React, { /*useEffect*/ } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport useIsMobileDevice from '../self-hook/useIsMobileDevice';\r\n\r\nconst Header = (props) => {\r\n    //變更手機板左邊的導覽列樣式\r\n    const changeContentNav = () => {\r\n        if(useIsMobileDevice()) {\r\n            //取得左邊導覽列(手機版用)的 dom\r\n            let content_nav = document.getElementById('content-nav');\r\n            content_nav.style.width = content_nav.clientWidth === 0 ? '50%' : 0;\r\n        }\r\n    };\r\n\r\n    /*useEffect(() => {\r\n        window.addEventListener('click', changeContentNav);\r\n        return () => {\r\n            window.removeEventListener('click', changeContentNav);\r\n        };\r\n    });*/\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header-div\">\r\n                {\r\n                    useIsMobileDevice() &&\r\n                    <div className=\"header-title\">\r\n                        <span id=\"header-title\" />\r\n                    </div>\r\n                }\r\n                <div className=\"content-nav\" id=\"content-nav\">\r\n                    <nav>\r\n                        <ul>\r\n                            <li>\r\n                                <NavLink to=\"/\" onClick={ changeContentNav }>My Tasks</NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink to=\"/in-progress\" onClick={ changeContentNav }>In Progress</NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink to=\"/completed\" onClick={ changeContentNav }>Completed</NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"bars-div\">\r\n                    <button className=\"bars-btn\" type=\"button\" onClick={ changeContentNav }>\r\n                        <span>\r\n                            <i className=\"fas fa-bars\" />\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body-div\">\r\n                <div className=\"content-div\">\r\n                    { props.children }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Header;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { taskActions } from '../redux/slice/taskReducer';\r\n\r\nconst TaskContent = (props) => {\r\n    //按下新增後，變更 div 的高\r\n    const [addTaskHeight, setAddTaskHeight] = useState(props.height[0]);\r\n\r\n    //觸發 actions\r\n    const dispatch = useDispatch();\r\n\r\n    //是否已完成 task\r\n    const [finishTask, setFinishTask] = useState(false);\r\n    //task title\r\n    const [title, setTitle] = useState('');\r\n    //是否為重要 task\r\n    const [important, setImportant] = useState(false);\r\n    //日期\r\n    const [date, setDate] = useState('');\r\n    //內容\r\n    const [content, setContent] = useState('');\r\n\r\n    const first_load = useRef(null);\r\n    useEffect(() => {\r\n        //第一次載入完成後\r\n        if(!first_load.current) {\r\n            resetData(props.dataContent);\r\n            first_load.current = true;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        //若按下 add tasks 按鈕則修改 div 高度\r\n        if(props.hideAddInput) {\r\n            setAddTaskHeight(props.height[1]);\r\n        }\r\n    }, [props.hideAddInput]);\r\n\r\n    //按下編輯筆\r\n    const clickEditPen = () => {\r\n        if(props.dataId !== -1 && !props.hideAddInput) {\r\n            props.setHideAddInput(!props.hideAddInput);\r\n        }\r\n    };\r\n\r\n    //重設資料\r\n    const resetData = (values) => {\r\n        values = props.dataId === -1 ? props.dataContent : values;\r\n\r\n        setFinishTask(values['finish_task']);\r\n        setTitle(values['title']);\r\n        setImportant(values['important']);\r\n        setDate(values['date']);\r\n        setContent(values['content']);\r\n    };\r\n\r\n    //按下取修按鈕\r\n    const clickCancel = (values) => {\r\n        setAddTaskHeight(props.height[0]);\r\n\r\n        //等待 div 收完再顯示\r\n        setTimeout(() => {\r\n            //初始化資料\r\n            resetData(values);\r\n\r\n            props.setHideAddInput(false);\r\n        }, 500);\r\n    };\r\n\r\n    //按下星星\r\n    const clickStar = () => {\r\n        let bool = !important;\r\n        setImportant(bool);\r\n\r\n        //若非新增及編輯模式勾選，則直接修改資料\r\n        if(!props.hideAddInput && props.dataId !== -1) {\r\n            const payload = {\r\n                dataKey: props.dataKey,\r\n                finishTask: finishTask,\r\n                important: bool\r\n            };\r\n\r\n            dispatch(taskActions.clickStar(payload));\r\n        }\r\n    };\r\n\r\n    //點選完成的 checkbox\r\n    const clickFinishTask = () => {\r\n        const bool = !finishTask;\r\n        setFinishTask(bool);\r\n\r\n        //若非新增及編輯模式勾選，則直接修改資料\r\n        if(!props.hideAddInput && props.dataId !== -1) {\r\n            const payload = {\r\n                dataKey: props.dataKey,\r\n                finishTask: bool\r\n            };\r\n\r\n            dispatch(taskActions.clickFinishTask(payload));\r\n        }\r\n    };\r\n\r\n    //儲存吃廖\r\n    const saveData = () => {\r\n        if(title === '') {\r\n            alert('Please type something title.');\r\n            return false;\r\n        }\r\n\r\n        let values = {};\r\n        values['data_id'] = props.dataId;\r\n        values['finish_task'] = finishTask;\r\n        values['title'] = title;\r\n        values['important'] = important;\r\n        values['date'] = date;\r\n        values['content'] = content;\r\n\r\n        //等於 -1 表示新增；反之\r\n        if(props.dataId === -1) {\r\n            dispatch(taskActions.addItem({ values: values }));\r\n        } else {\r\n            dispatch(taskActions.updateItem({\r\n                path: props.path,\r\n                dataKey: props.dataKey,\r\n                values: values\r\n            }));\r\n        }\r\n\r\n        //關閉視窗\r\n        clickCancel(values);\r\n    };\r\n\r\n    //非編輯模式顯示的 title 樣式\r\n    const add_task_span_style = {\r\n        display: props.hideAddInput ? 'none' : '',\r\n        textDecoration: finishTask ? 'line-through' : 'none'\r\n    };\r\n\r\n    //若有日期或內容就顯示小 ico\r\n    const getSmIco = () => {\r\n        let ico = [];\r\n\r\n        //若有日期則顯示日期的 ico\r\n        if(props.dataContent['date'] !== '') {\r\n            const date_obj = new Date(props.dataContent['date']);\r\n            const year = date_obj.getFullYear().toString();\r\n            let month = (date_obj.getMonth() + 1).toString();\r\n            let date = date_obj.getDate().toString();\r\n\r\n            let str = year.substr(2, 2) + '/' + month.padStart(2, '0') + '/' + date.padStart(2, '0');\r\n            ico.push(\r\n                <span className=\"date-span\" key={ 1 }>\r\n                    <i className=\"far fa-calendar-alt\" style={{ paddingRight: 5 }} />\r\n                    { str }\r\n                </span>\r\n            );\r\n        }\r\n\r\n        //若有內容，則顯示內容的 ico\r\n        if(props.dataContent['content'] !== '') {\r\n            ico.push(<span className=\"date-span\" key={ 2 }><i className=\"far fa-comment-dots\" /></span>);\r\n        }\r\n\r\n        return ico;\r\n    };\r\n\r\n    return (\r\n        <div className=\"add-task-div\" style={{ height: addTaskHeight }}>\r\n            <div className=\"add-task-header\" style={{ backgroundColor: important ? '#FFF2DC' : '' }}>\r\n                <div className=\"add-task-title\">\r\n                    <input type=\"checkbox\" className=\"add-task-fin-box\"\r\n                        checked={ finishTask } onChange={ clickFinishTask } />\r\n                    <span className=\"add-task-span\" style={ add_task_span_style }>\r\n                        { title }\r\n                    </span>\r\n                    <input type=\"text\" className=\"add-task-text\" placeholder=\"Type Something Here...\"\r\n                        style={{ display: !props.hideAddInput ? 'none' : '' }}\r\n                        value={ title } onChange={(e) => { setTitle(e.target.value); }} />\r\n                    <div className=\"add-task-sm-ico\" style={{ display: props.hideAddInput ? 'none' : '' }}>\r\n                        { getSmIco() }\r\n                    </div>\r\n                </div>\r\n                <div className=\"add-task-icon\">\r\n                    <span className={ important ? 'active' : '' }\r\n                        onClick={ clickStar }>\r\n                        <i className={ important ? 'fas fa-star fa-2x' : 'far fa-star fa-2x' } />\r\n                    </span>\r\n                    <span className=\"edit-pen\"\r\n                        onClick={ clickEditPen }>\r\n                        <i className={ props.hideAddInput ? 'fas fa-pen fa-2x' : 'far fa-pen fa-2x' } />\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className=\"add-task-content\">\r\n                <div className=\"date-div\">\r\n                    <label>\r\n                        <span className=\"date-span\"><i className=\"far fa-calendar-alt\" /></span>\r\n                        <b>Deadline</b>\r\n                    </label>\r\n                    <div className=\"date-div-input\">\r\n                        <input type=\"date\" className=\"date-input\"\r\n                            value={ date }\r\n                            onChange={(e) => { setDate(e.target.value); }} />\r\n                        <span className=\"validity\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"file-div\">\r\n                    {/*<label>\r\n                        <span className=\"date-span\"><i className=\"far fa-file\" /></span>\r\n                        <b>File</b>\r\n                    </label>\r\n                    <div className=\"file-div-btn\">\r\n                        <button type=\"button\" className=\"file-btn\">+</button>\r\n                    </div>*/}\r\n                </div>\r\n                <div className=\"comment-div\">\r\n                    <label>\r\n                        <span className=\"date-span\"><i className=\"far fa-comment-dots\" /></span>\r\n                        <b>Comment</b>\r\n                    </label>\r\n                    <div className=\"comment-div-textarea\">\r\n                        <textarea className=\"comment-textarea\" rows=\"9\" placeholder=\"Type your memo here...\"\r\n                            value={ content }\r\n                            onChange={(e) => { setContent(e.target.value); }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"add-task-btn\">\r\n                <button type=\"button\" className=\"cancel-btn\"\r\n                    onClick={() => { clickCancel(props.dataContent); }  }>X Cancel</button>\r\n                <button type=\"button\" className=\"add-btn\" onClick={ saveData }>\r\n                    { props.dataId === -1 ? '+ Add Task' : '+ Save' }\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskContent;","import React, { useState } from 'react';\r\n\r\nimport TaskContent from './TaskContent';\r\n\r\nconst AddTask = (props) => {\r\n    //顯示或隱藏新增按鈕\r\n    const [hideAddInput, setHideAddInput] = useState(false);\r\n\r\n    //指定預設高度與展開後的高度\r\n    const height = [0, 400];\r\n\r\n    //顯示輸入資料的 div，隱藏新增按鈕\r\n    const showAddTaskDiv = () => {\r\n        setHideAddInput(true);\r\n    };\r\n\r\n    //預設值\r\n    const values = {\r\n        'finish_task': false,\r\n        'title': '',\r\n        'important': false,\r\n        'date': '',\r\n        'content': ''\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input id=\"add-task\" placeholder=\"+ Add Task\" readOnly\r\n                onClick={ showAddTaskDiv } style={{ display: hideAddInput ? 'none' : '' }} />\r\n            <TaskContent hideAddInput={ hideAddInput } setHideAddInput={ setHideAddInput }\r\n                height={ height } dataId={ -1 } dataContent={ values } path={ props.path } />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddTask;","import React, { useState } from 'react';\r\n\r\nimport TaskContent from './TaskContent';\r\n\r\nconst TaskItem = (props) => {\r\n    //顯示或隱藏\r\n    const [hideAddInput, setHideAddInput] = useState(false);\r\n\r\n    //指定預設高度與展開後的高度\r\n    const height = [75, 400];\r\n\r\n    //顯示輸入資料的 div，隱藏新增按鈕\r\n    /*const showAddTaskDiv = () => {\r\n        setHideAddInput(true);\r\n    };*/\r\n\r\n    return (\r\n        <TaskContent hideAddInput={ hideAddInput } setHideAddInput={ setHideAddInput } dataKey={ props.dataKey }\r\n            height={ height } dataId={ props.id } dataContent={ props.values } path={ props.path } />\r\n    );\r\n};\r\n\r\nexport default TaskItem;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Footer = (props) => {\r\n    //取得資料\r\n    let in_progress_list = useSelector((state => state.tasks.inProgress));\r\n    let completed_list = useSelector((state => state.tasks.completed));\r\n\r\n    //最底下的筆數訊息\r\n    let msg;\r\n\r\n    //判斷當前的頁面若為完成，則顯示完成的筆數，反之\r\n    if(props.path === '/completed') {\r\n        msg = completed_list.length + ' task completed';\r\n    } else {\r\n        msg = in_progress_list.length + ' tasks left';\r\n    }\r\n\r\n    return (\r\n        <div className=\"footer-div\">\r\n            <span id=\"footer-msg\">{ msg }</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport useIsMobileDevice from '../self-hook/useIsMobileDevice';\r\n\r\nimport AddTask from './AddTask';\r\nimport TaskList from './TaskList';\r\nimport Footer from './Footer';\r\n\r\n//修改 header title\r\nconst changeHeaderTitle = (path) => {\r\n    const title_dom = document.getElementById('header-title');\r\n    let title;\r\n\r\n    switch (path) {\r\n        case '/':\r\n            title = 'My Tasks';\r\n            break;\r\n        case '/in-progress':\r\n            title = 'In Progress';\r\n            break;\r\n        case '/completed':\r\n            title = 'Completed';\r\n            break;\r\n    }\r\n\r\n    title_dom.innerHTML = title;\r\n};\r\n\r\nconst Content = () => {\r\n    //取得當前路徑的 pathname\r\n    const location = useLocation();\r\n    const path = location.pathname;\r\n\r\n    //第一次載入完後修改 header title\r\n    const first_load = useRef(null);\r\n    useEffect(() => {\r\n        if(!first_load.current) {\r\n            first_load.current = true;\r\n\r\n            if(useIsMobileDevice()) {\r\n                changeHeaderTitle(path);\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <AddTask path={ path } />\r\n            <TaskList path={ path } />\r\n            <Footer path={ path } />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nimport Content from '../Content';\r\n\r\nconst MyTasks = () => {\r\n    return (\r\n        <Content />\r\n    );\r\n};\r\n\r\nexport default MyTasks;","import React from 'react';\r\nimport Content from '../Content';\r\n\r\nconst InProgress = () => {\r\n    return (\r\n        <>\r\n            <Content />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InProgress;","import React from 'react';\r\nimport Content from '../Content';\r\n\r\nconst Completed = () => {\r\n    return (\r\n        <>\r\n            <Content />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Completed;","import React from 'react';\r\nimport { BrowserRouter as Router, useRoutes } from 'react-router-dom';\r\n\r\nimport Header from '../layouts/Header';\r\nimport MyTasks from '../components/main/MyTasks';\r\nimport InProgress from '../components/main/InProgress';\r\nimport Completed from '../components/main/Completed';\r\n\r\nconst GetRoute = () => {\r\n    return useRoutes([\r\n        {\r\n            path: '/',\r\n            element: <MyTasks />\r\n        },\r\n        {\r\n            path: '/in-progress',\r\n            element: <InProgress />\r\n        },\r\n        {\r\n            path: '/completed',\r\n            element: <Completed />\r\n        }\r\n    ]);\r\n};\r\n\r\n// basename=\"MyTasks\"\r\nconst RouteList = ()=> {\r\n    return (\r\n        <Router>\r\n            <Header>\r\n                <GetRoute />\r\n            </Header>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default RouteList;","import React from 'react';\r\n\r\nimport './css/App.scss';\r\n\r\n/* redux */\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store/index';\r\n\r\n/* route */\r\nimport RouteList from './routes/RouteList';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <RouteList />\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}